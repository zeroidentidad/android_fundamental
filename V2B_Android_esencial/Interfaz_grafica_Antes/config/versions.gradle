ext.deps = [:]

def versions = [:]
versions.android_gradle_plugin = "3.1.2"
versions.anko_version = "0.10.5"
versions.espresso_core_test = "3.0.2"
versions.google_service = "12.0.1"
versions.gms = "4.0.1"
versions.junit_test = "4.12"
versions.kotlin = "1.2.40"
versions.pretty_logs = "2.2.0"
versions.runner_test = "1.0.2"
versions.support = "27.1.1"
versions.lifecycle = "1.1.1"
versions.room = "1.1.0"
versions.work_manager = "1.0.0-alpha02"
versions.retrofit = "2.4.0"
versions.rxandroid = "2.0.2"
versions.okhttp_logging = "3.8.0"

def deps = [:]

def support = [:]
support.appcompat = "com.android.support:appcompat-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
deps.support = support

def build_versions = [:]
build_versions.min_sdk = 16
build_versions.target_sdk = 27
ext.build_versions = build_versions

def firebase = [:]
firebase.core = "com.google.firebase:firebase-core:$versions.google_service"
firebase.auth = "com.google.firebase:firebase-auth:$versions.google_service"
deps.firebase = firebase

def google_services = [:]
google_services.gms = "com.google.gms:google-services:$versions.gms"
google_services.auth = "com.google.android.gms:play-services-auth:$versions.google_service"
google_services.location = "com.google.android.gms:play-services-location:$versions.google_service"
deps.google_services = google_services

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def test = [:]
test.junit = "junit:junit:$versions.junit_test"
test.runner = "com.android.support.test:runner:$versions.runner_test"
test.espresso_core = "com.android.support.test.espresso:espresso-core:$versions.espresso_core_test"
deps.test = test

def anko = [:]
anko.commons = "org.jetbrains.anko:anko-commons:$versions.anko_version"
deps.anko = anko

def retrofit = [:]
retrofit.common = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.adapter_rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
retrofit.okhttp_logging = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging"
deps.retrofit = retrofit

def architecture_components = [:]
architecture_components.lifecycle = "android.arch.lifecycle:extensions:$versions.lifecycle"
architecture_components.lifecycle_compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
architecture_components.lifecycle_reactive = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"
architecture_components.lifecycle_testing = "android.arch.core:core-testing:$versions.lifecycle"
architecture_components.room = "android.arch.persistence.room:runtime:$versions.room"
architecture_components.room_compiler = "android.arch.persistence.room:compiler:$versions.room"
architecture_components.room_testing = "android.arch.persistence.room:testing:$versions.room"
architecture_components.work = "android.arch.work:work-runtime:$versions.work_manager"
architecture_components.work_testing = "android.arch.work:work-testing:$versions.work_manager"
deps.architecture_components = architecture_components

// Others
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.pretty_logs = "com.orhanobut:logger:$versions.pretty_logs"

ext.deps = deps